==== NORMAL BODYPART VARIABLES ====
final int type;
final String bodyPartClass;
final int standardBloodCapacity
final int standardBloodGeneration;
final int standardNeededBlood;
final int standardEnergyCapacity;
final int standardEnergyGeneration;
final int standardNeededEnergy;
final int standardHealth;
final int standardRegenRate;
final int standardRegenLimit;
final int standardArmour;
final int standardSize;
final int standardOrganCapacity;
final int standardSpeedModifier;

@Override
public void instantiateBodyPart(int bias, int randomness)
{
    bloodCapacity = BodyLogicHelper.calculateBodyPartStat(standardBloodCapacity, bias, randomness);
    bloodGeneration = BodyLogicHelper.calculateBodyPartStat(standardBloodGeneration, bias, randomness);
    neededBlood = BodyLogicHelper.calculateBodyPartStat(standardNeededBlood, bias, randomness);
    energyCapacity = BodyLogicHelper.calculateBodyPartStat(standardEnergyCapacity, bias, randomness);
    energyGeneration = BodyLogicHelper.calculateBodyPartStat(standardEnergyGeneration, bias, randomness);
    neededEnergy = BodyLogicHelper.calculateBodyPartStat(standardNeededEnergy, bias, randomness);
    health = BodyLogicHelper.calculateBodyPartStat(standardHealth, bias, randomness);
    regenRate = BodyLogicHelper.calculateBodyPartStat(standardRegenRate, bias, randomness);
    regenLimit = BodyLogicHelper.calculateBodyPartStat(standardRegenLimit, bias, randomness);
    armour = BodyLogicHelper.calculateBodyPartStat(standardArmour, bias, randomness);
    size = BodyLogicHelper.calculateBodyPartStat(standardSize, bias, randomness);
    organCapacity = BodyLogicHelper.calculateBodyPartStat(standardOrganCapacity, bias, randomness);
    speedModifier = BodyLogicHelper.calculateBodyPartStat(standardSpeedModifier, bias, randomness);
}